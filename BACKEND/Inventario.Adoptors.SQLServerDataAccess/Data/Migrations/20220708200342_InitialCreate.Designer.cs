// <auto-generated />
using System;
using Inventario.Adoptors.SQLServerDataAccess.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Inventario.Adoptors.SQLServerDataAccess.Data.Migrations
{
    [DbContext(typeof(InventarioDB))]
    [Migration("20220708200342_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Inventario.Core.Domain.Models.Componentes", b =>
                {
                    b.Property<Guid>("componenete_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("created_at")
                        .HasColumnType("datetime2");

                    b.Property<string>("estado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("marca")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("modelo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("pc_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("tipo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("updated_at")
                        .HasColumnType("datetime2");

                    b.HasKey("componenete_id");

                    b.HasIndex("pc_id");

                    b.ToTable("tb_componentes");
                });

            modelBuilder.Entity("Inventario.Core.Domain.Models.Diagnostico_Pc", b =>
                {
                    b.Property<Guid>("diagnostico_pc_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("created_at")
                        .HasColumnType("datetime2");

                    b.Property<string>("detalle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("estado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("fecha_hora")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("pc_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("soluccion_asignada")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("updated_at")
                        .HasColumnType("datetime2");

                    b.HasKey("diagnostico_pc_id");

                    b.HasIndex("pc_id");

                    b.ToTable("tb_diagnostico_pc");
                });

            modelBuilder.Entity("Inventario.Core.Domain.Models.Herramientas", b =>
                {
                    b.Property<Guid>("herramienta_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("cantidad")
                        .HasColumnType("int");

                    b.Property<DateTime>("created_at")
                        .HasColumnType("datetime2");

                    b.Property<string>("estado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("tipo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("updated_at")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("usuariosuser_id")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("herramienta_id");

                    b.HasIndex("usuariosuser_id");

                    b.ToTable("tb_herramientas");
                });

            modelBuilder.Entity("Inventario.Core.Domain.Models.Laboratorios", b =>
                {
                    b.Property<Guid>("lab_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Estado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("created_at")
                        .HasColumnType("datetime2");

                    b.Property<int>("num_pc")
                        .HasColumnType("int");

                    b.Property<DateTime>("updated_at")
                        .HasColumnType("datetime2");

                    b.HasKey("lab_id");

                    b.ToTable("tab_Laboratorios");
                });

            modelBuilder.Entity("Inventario.Core.Domain.Models.Mantenimiento", b =>
                {
                    b.Property<Guid>("user_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("lab_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("fecha")
                        .HasColumnType("datetime2");

                    b.Property<string>("info")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("user_id", "lab_id");

                    b.HasIndex("lab_id");

                    b.ToTable("tb_mantenimiento");
                });

            modelBuilder.Entity("Inventario.Core.Domain.Models.Pc", b =>
                {
                    b.Property<Guid>("pc_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("created_at")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("lab_id1")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("modelo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("updated_at")
                        .HasColumnType("datetime2");

                    b.HasKey("pc_id");

                    b.HasIndex("lab_id1");

                    b.ToTable("tb_pc");
                });

            modelBuilder.Entity("Inventario.Core.Domain.Models.Repuestos", b =>
                {
                    b.Property<Guid>("repuesto_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("cantidad")
                        .HasColumnType("int");

                    b.Property<DateTime>("created_at")
                        .HasColumnType("datetime2");

                    b.Property<string>("estado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("info")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("serie")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("updated_at")
                        .HasColumnType("datetime2");

                    b.HasKey("repuesto_id");

                    b.ToTable("tb_repuestos");
                });

            modelBuilder.Entity("Inventario.Core.Domain.Models.Usuarios", b =>
                {
                    b.Property<Guid>("user_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("apellido")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("cargo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("correo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("created_at")
                        .HasColumnType("datetime2");

                    b.Property<string>("direccion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("telefono")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("updated_at")
                        .HasColumnType("datetime2");

                    b.HasKey("user_id");

                    b.ToTable("tb_Usuarios");
                });

            modelBuilder.Entity("Inventario.Core.Domain.Models.Componentes", b =>
                {
                    b.HasOne("Inventario.Core.Domain.Models.Pc", "pc")
                        .WithMany()
                        .HasForeignKey("pc_id");
                });

            modelBuilder.Entity("Inventario.Core.Domain.Models.Diagnostico_Pc", b =>
                {
                    b.HasOne("Inventario.Core.Domain.Models.Pc", "Pc")
                        .WithMany()
                        .HasForeignKey("pc_id");
                });

            modelBuilder.Entity("Inventario.Core.Domain.Models.Herramientas", b =>
                {
                    b.HasOne("Inventario.Core.Domain.Models.Usuarios", "usuarios")
                        .WithMany()
                        .HasForeignKey("usuariosuser_id");
                });

            modelBuilder.Entity("Inventario.Core.Domain.Models.Mantenimiento", b =>
                {
                    b.HasOne("Inventario.Core.Domain.Models.Laboratorios", "laboratorios")
                        .WithMany()
                        .HasForeignKey("lab_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Inventario.Core.Domain.Models.Usuarios", "usuarios")
                        .WithMany()
                        .HasForeignKey("user_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Inventario.Core.Domain.Models.Pc", b =>
                {
                    b.HasOne("Inventario.Core.Domain.Models.Laboratorios", "lab_id")
                        .WithMany()
                        .HasForeignKey("lab_id1");
                });
#pragma warning restore 612, 618
        }
    }
}
